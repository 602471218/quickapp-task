<template>
  <!-- template里只能有一个根节点 -->
  <div class="wrapper">
    <!-- <text class="title">{{ title }}</text> -->
    <!-- 点击跳转详情页 -->
    <!-- <input
      class="btn"
      type="button"
      value="跳转到详情页"
      onclick="onDetailBtnClick"
    /> -->
    <canvas id='clock' class = 'new-canvas'></canvas>
  </div>
</template>

<script>
import router from '@system.router'

export default {
  // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖
  private: {
    title: '欢迎体验快应用开发',
    currentTime: null,
    timer:null,
  },

  onInit() {
    // --------------------------------- Optimize SEO Start
    // 当 titlebar 的文案与搜索的标题不一致时，请先设置 titlebar
    // 备注：this.$page.setMeta 需要引擎 1090 版本及以上才支持，因此这段做注释处理；
    // this.$page.setTitleBar({ text: '欢迎体验快应用开发' })
    // if (this.$page.setMeta) {
    //   this.$page.setMeta({
    //     title: '快应用示例模版',
    //     description:
    //       '快应用是移动互联网新型应用生态，与手机系统深度整合，为用户提供更加场景化的体验。具备传统APP完整的应用体验，但无需安装、即点即用。',
    //   })
    // }
    // --------------------------------- Optimize SEO End
  },
  onShow () {
    this.timer = setInterval(() => {
      this.drawClock()
    }, 1000); 
    // this.drawClock()
  },

  drawClock(){

    this.currentTime = new Date();

    console.info(this.currentTime)

    const canvas = this.$element('clock');

    const ctx = canvas.getContext('2d');

    ctx.clearRect(0, 0, 400, 400);

    const width = 400;

    const height = 400;

    const hour = this.currentTime.getHours();

    const minute = this.currentTime.getMinutes();

    const second = this.currentTime.getSeconds();

    const hourAngle = ((hour%12)+minute/60+second/3600)*30*Math.PI/180;

    const minuteAngle = (minute + second/60)*6*Math.PI/180;

    const secondAngle = second*6*Math.PI/180;


    const clockRadius = 200
    // 绘制时钟的外圆
    ctx.beginPath();
    ctx.arc(width / 2, height / 2, width / 2 - 10, 0, 2 * Math.PI);
    ctx.lineWidth = 10;
    ctx.strokeStyle = 'black';
    ctx.stroke();

    // draw clock image (as background)
    var clockImage = new Image();
    clockImage.src = 'https://static.runoob.com/images/mix/125855_nnla_89964.png';
    ctx.drawImage(clockImage, 0, 0, 400, 400);

    // ctx.translate(width / 2, height / 2);

    // draw numbers
    ctx.font = '36px Arial';
    ctx.fillStyle = '#000';
    ctx.textAlign = 'center';
    ctx.textBaseline = 'middle';
    for (var n = 1; n <= 12; n++) {
        var theta = (n - 3) * (Math.PI * 2) / 12;
        var x = clockRadius * 0.7 * Math.cos(theta);
        var y = clockRadius * 0.7 * Math.sin(theta);
        ctx.fillText(n, x + width / 2, y + height / 2);
    }
    
    // 绘制时钟的时针
    ctx.beginPath();
    ctx.moveTo(width / 2, height / 2);
    ctx.lineTo(width / 2 + Math.sin(hourAngle) * (width / 2 - 50), height / 2 - Math.cos(hourAngle) * (width / 2 - 50));
    ctx.lineWidth = 6;
    ctx.strokeStyle = 'black';
    ctx.stroke();

    // 绘制时钟的分针
    ctx.beginPath();
    ctx.moveTo(width / 2, height / 2);
    ctx.lineTo(width / 2 + Math.sin(minuteAngle) * (width / 2 - 30), height / 2 - Math.cos(minuteAngle) * (width / 2 - 30));
    ctx.lineWidth = 4;
    ctx.strokeStyle = 'black';
    ctx.stroke();

    // 绘制时钟的秒针
    ctx.beginPath();
    ctx.moveTo(width / 2, height / 2);
    ctx.lineTo(width / 2 + Math.sin(secondAngle) * (width / 2 - 20), height / 2 - Math.cos(secondAngle) * (width / 2 - 20));
    ctx.lineWidth = 2;
    ctx.strokeStyle = 'red';
    ctx.stroke();

  },
  onDetailBtnClick() {
    // 跳转到应用内的某个页面，router用法详见：文档 -> 接口 -> 页面路由
    router.push({
      uri: '/pages/DemoDetail',
    })
  },
  onDestroy () {
    clearInterval(this.timer);
  },
}
</script>

<style lang="less">
@import './../../assets/styles/style.less';

.wrapper {
  .flex-box-mixins(column, center, center);
  .title {
    font-size: 8 * @size-factor;
    text-align: center;
    color: @black;
  }

  .btn {
    width: 90 * @size-factor;
    height: 16 * @size-factor;
    border-radius: 8 * @size-factor;
    background-color: @brand;
    color: @white;
    font-size: 30px;
    margin-top: 16 * @size-factor;
  }
  .new-canvas {
    height: 400px;
    width: 400px;
  }
}
</style>
